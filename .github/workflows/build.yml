name: Python package

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:

  build:
    name: Build for (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Python info
        shell: bash -e {0}
        run: |
          which python
          python --version
      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install .[dev,publishing,tensorflow]
      - name: Run unit tests
        run: python -m pytest -v
        env:
          KERAS_BACKEND: tensorflow
      - name: Verify that we can build the package
        run: python -m build
  lint:
    name: Linting build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Python info
        shell: bash -e {0}
        run: |
          which python
          python --version
      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install .[dev,publishing]
      - name: Check style against standards using ruff
        run: |
          ruff check
          ruff format --check
  backend:
    name: Run tests for backend ${{ matrix.backend }}
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: true
      matrix:
        backend: ['tensorflow', 'torch', 'jax']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Python info
        shell: bash -e {0}
        run: |
          which python
          python --version
      - name: Upgrade pip and install dependencies with backend ${{ matrix.backend }}
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install .[dev,publishing,${{ matrix.backend }}]
      - name: Run unit tests
        run: python -m pytest -v
        env:
          KERAS_BACKEND: ${{ matrix.backend }}
